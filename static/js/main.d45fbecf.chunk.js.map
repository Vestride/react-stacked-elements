{"version":3,"sources":["app.module.css","demo.module.css","../../src/index.tsx","demo1.module.css","demo2.module.css","demo1.tsx","demo2.tsx","app.tsx","index.tsx"],"names":["module","exports","StackedElements","selectedIndex","React","className","style","display","Children","map","children","child","i","styles","gridColumnStart","gridRowStart","zIndex","visibility","key","isRequired","Demo1","useState","isChecked","setIsChecked","demoStyles","demo","htmlFor","label","checkboxWrapper","response","id","type","checked","onChange","Demo2","isConfirmed","setIsConfirmed","onClick","autoPlay","muted","loop","playsInline","video","src","href","reset","App","header","container","description","pre","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8EACAA,EAAOC,QAAU,CAAC,OAAS,oBAAoB,UAAY,uBAAuB,YAAc,yBAAyB,IAAM,mB,iBCA/HD,EAAOC,QAAU,CAAC,KAAO,qB,8DCQnBC,G,KAAiE,gBAAwBC,yBAC7FC,yBAAKC,YADmEA,UAC7CC,MAAO,CAAEC,QAAS,SAC1CH,IAAMI,SAASC,MAFiEC,UAEnD,SAACC,EAAOC,GACpC,IAAMC,EAA8B,CAClCC,gBAAiB,EACjBC,aAAc,GAQhB,OANIH,IAAMT,EACRU,EAAOG,OAAS,GAEhBH,EAAOI,WAAa,SACpBJ,EAAOG,OAAS,GAGhBZ,yBACEc,gCAAiCN,4CACQA,gBAC5BA,IAAMT,EACnBG,MAAOO,GAENF,SAWyBQ,Q,mCCvCpCnB,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,gBAAkB,+BAA+B,SAAW,0B,iBCA3GD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,uB,uNCO1CmB,EAAiC,WAAO,IAAD,EAChBC,oBAAS,GADO,mBAC3CC,EAD2C,KAChCC,EADgC,KAElD,OACE,yBAAKlB,UAAWmB,IAAWC,MACzB,2BAAOC,QAAQ,iBACb,yBAAKrB,UAAWQ,IAAOc,OAAvB,kBACA,yBAAKtB,UAAWQ,IAAOe,iBACrB,kBAAC,IAAD,CAAiBzB,cAAemB,EAAY,EAAI,EAAGjB,UAAWQ,IAAOgB,UACnE,4CACA,qCAEF,2BAAOC,GAAG,gBAAgBC,KAAK,WAAWC,QAASV,EAAWW,SAAU,kBAAMV,GAAcD,U,gBCXzFY,EAAiC,WAAO,IAAD,EACZb,oBAAS,GADG,mBAC3Cc,EAD2C,KAC9BC,EAD8B,KAElD,OACE,yBAAK/B,UAAWmB,IAAWC,MACzB,kBAAC,IAAD,CAAiBtB,cAAegC,EAAc,EAAI,GAChD,4BAAQE,QAAS,kBAAMD,GAAe,KAAtC,WACA,2BAAOE,UAAQ,EAACC,OAAK,EAACC,MAAI,EAACC,aAAW,EAACpC,UAAWQ,IAAO6B,OACvD,4BACEC,IAAI,8DACJZ,KAAK,+CAEP,uBAAGa,KAAK,+DAAR,wDAMJ,4BAAQvC,UAAWQ,IAAOgC,MAAOR,QAAS,kBAAMD,GAAe,KAA/D,W,gBCuBSU,EAzCO,kBACpB,oCACE,4BAAQzC,UAAWQ,IAAOkC,QACxB,yBAAK1C,UAAWQ,IAAOmC,WACrB,0DAGJ,0BAAM3C,UAAWQ,IAAOmC,WACtB,gCAAY3C,UAAWQ,IAAOoC,aAA9B,wFAGA,+CACA,yBAAK5C,UAAWQ,IAAOqC,KACrB,qEAEF,qCACA,gDACA,kBAAC,EAAD,MACA,yBAAK7C,UAAWQ,IAAOqC,KACrB,wJAKF,8CACA,kBAAC,EAAD,MACA,yBAAK7C,UAAWQ,IAAOqC,KACrB,gYC7BRC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d45fbecf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app_header__2ppV5\",\"container\":\"app_container__2JKVN\",\"description\":\"app_description__1PHzC\",\"pre\":\"app_pre__Pk_9p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"demo\":\"demo_demo__1gcue\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\ninterface StackedElementsProps {\n  className?: string;\n  children: React.ReactNode;\n  selectedIndex: number;\n}\n\nconst StackedElements: React.FunctionComponent<StackedElementsProps> = ({ className, children, selectedIndex }) => (\n  <div className={className} style={{ display: 'grid' }}>\n    {React.Children.map(children, (child, i) => {\n      const styles: React.CSSProperties = {\n        gridColumnStart: 1,\n        gridRowStart: 1,\n      };\n      if (i === selectedIndex) {\n        styles.zIndex = 1;\n      } else {\n        styles.visibility = 'hidden';\n        styles.zIndex = 0;\n      }\n      return (\n        <div\n          key={`stacked-elements-content-${i}`}\n          data-testid={`stacked-elements-content-${i}`}\n          aria-hidden={i !== selectedIndex}\n          style={styles}\n        >\n          {child}\n        </div>\n      );\n    })}\n  </div>\n);\n\nif (typeof process !== 'undefined' && process.env.NODE_ENV !== 'production') {\n  StackedElements.propTypes = {\n    children: PropTypes.arrayOf(PropTypes.element).isRequired,\n    className: PropTypes.string,\n    selectedIndex: PropTypes.number.isRequired,\n  };\n}\n\nexport default StackedElements;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"demo1_label__2Qek4\",\"checkboxWrapper\":\"demo1_checkboxWrapper__e-Vok\",\"response\":\"demo1_response__1Nh3K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"video\":\"demo2_video__3DszH\",\"reset\":\"demo2_reset__24Qho\"};","import React, { useState } from 'react';\n\nimport '../../dist/stacked-elements.css';\nimport StackedElements from '../..';\n\nimport demoStyles from './demo.module.css';\nimport styles from './demo1.module.css';\n\nexport const Demo1: React.FunctionComponent = () => {\n  const [isChecked, setIsChecked] = useState(true);\n  return (\n    <div className={demoStyles.demo}>\n      <label htmlFor=\"rsvp-checkbox\">\n        <div className={styles.label}>Are you going?</div>\n        <div className={styles.checkboxWrapper}>\n          <StackedElements selectedIndex={isChecked ? 0 : 1} className={styles.response}>\n            <span>Absolutely</span>\n            <span>No</span>\n          </StackedElements>\n          <input id=\"rsvp-checkbox\" type=\"checkbox\" checked={isChecked} onChange={() => setIsChecked(!isChecked)} />\n        </div>\n      </label>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\n\nimport '../../dist/stacked-elements.css';\nimport StackedElements from '../..';\n\nimport demoStyles from './demo.module.css';\nimport styles from './demo2.module.css';\n\nexport const Demo2: React.FunctionComponent = () => {\n  const [isConfirmed, setIsConfirmed] = useState(false);\n  return (\n    <div className={demoStyles.demo}>\n      <StackedElements selectedIndex={isConfirmed ? 1 : 0}>\n        <button onClick={() => setIsConfirmed(true)}>Confirm</button>\n        <video autoPlay muted loop playsInline className={styles.video}>\n          <source\n            src=\"https://media2.giphy.com/media/f3jZ8moRBbEvNJjOtu/giphy.mp4\"\n            type='video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'\n          />\n          <a href=\"https://media2.giphy.com/media/f3jZ8moRBbEvNJjOtu/giphy.gif\">\n            Your browser does not support the mp4 video codec.\n          </a>\n        </video>\n      </StackedElements>\n\n      <button className={styles.reset} onClick={() => setIsConfirmed(false)}>\n        reset\n      </button>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { Demo1 } from './demo1';\nimport { Demo2 } from './demo2';\n\nimport styles from './app.module.css';\n\nconst App: React.FC = () => (\n  <>\n    <header className={styles.header}>\n      <div className={styles.container}>\n        <code>react-stacked-elements</code>\n      </div>\n    </header>\n    <main className={styles.container}>\n      <blockquote className={styles.description}>\n        Toggle the visibility of two elements without removing them from the document layout\n      </blockquote>\n      <p>Install with npm</p>\n      <pre className={styles.pre}>\n        <code>npm install react-stacked-elements</code>\n      </pre>\n      <h2>Demos</h2>\n      <h3>Horizontal space</h3>\n      <Demo1 />\n      <pre className={styles.pre}>\n        <code>{`<StackedElements selectedIndex={isChecked ? 0 : 1}>\n  <span>Absolutely</span>\n  <span>No</span>\n</StackedElements>`}</code>\n      </pre>\n      <h3>Vertical space</h3>\n      <Demo2 />\n      <pre className={styles.pre}>\n        <code>{`<StackedElements selectedIndex={isConfirmed ? 1 : 0}>\n  <button onClick={() => setIsConfirmed(true)}>Confirm</button>\n  <video autoPlay muted loop playsInline>\n    <source\n      src=\"https://media2.giphy.com/media/f3jZ8moRBbEvNJjOtu/giphy.mp4\"\n      type='video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'\n    />\n  </video>\n</StackedElements>`}</code>\n      </pre>\n    </main>\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}